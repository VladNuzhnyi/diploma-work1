version: "3"
services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    depends_on:
      - db
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf/:/etc/nginx/conf.d/default.conf
    ports:
      - "8081:80"
      - "443:443"
    networks:
      - app-network

  #MySQL Service
  adminer:
    image: adminer
    restart: always
    ports:
      - 6080:8080
    networks:
      - app-network
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    tty: true
    volumes:
      - ./docker/db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: rent
      MYSQL_ROOT_PASSWORD: test
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    container_name: elasticsearch
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - 9200:9200
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
networks:
  app-network:
    driver: bridge
